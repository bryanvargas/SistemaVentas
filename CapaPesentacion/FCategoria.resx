<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Eliminar.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="errorIcono.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>127, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABSUlE6JiUjl01OTkyBf34BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABAQ0IzLywnuCMaAf82KgH/Jh0B/yYiGMtVUlJHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAS0pFcSEbAv40KAD/MSYA/y8jAP8yJgD/NCoB/yIbAf8yLSa5YF9eLgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAcHNwKyEeGbopIQH/NCcA/y4jAP8sIQD/LCAA/ywhAP8uIgD/MicA/zQqAP8iGwP8JyUljFFP
        Tg0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAXF1bJC8vKacmHQL8NioA/zInAP8uIgD/LSIA/ywhAP8sIQD/LCEA/y0hAP8tIwD/MCUA/zUo
        AP8xJwH/IxwJ6zUzMXxpaGgJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAASEhKCkdGRYIgGwP3NSwA/zgrAP80KAD/MiYA/zElAP8xJQD/MSQA/zAkAP8wJAD/MSQA/zAk
        AP8xJQD/MiYA/zUoAP85LAD/MCYB/yMgE95fXFpOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZWRjGjk3MoMnIQnpNysB/z0wAP87LgD/OSwA/zcrAP83KgD/NisB/ywiAv8eHQL/ESIB/xsf
        Af8nHwL/NSoB/zgqAP84KgD/OCsA/zktAP88LgD/PjEB/zAkAf8rJhTLV1dUXWhpaAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAJCQkxUgGgjvQDAC/0Y3CP9ENQb/QTQG/0A0Bv9ANAb/QDQG/zgsBv8VGQT/AigB/wI8
        AP8ASAD/AjwA/wMtAv8PGAT/LCMH/z8yBv9AMwb/QTQG/0E0Bv9DNQf/QzYF/0M4Bf83KQH/Ih4XxwAA
        AAAAAAAAAAAAAAAAAAAAAAAAPj4+SzEmAf9JOgr/Sj0P/0k8Dv9IPA7/RzsO/0c7D/8xKQz/Cx4E/wM8
        AP8ARgD/AD8A/wA9AP8APwD/AUUA/wM8AP8CKQH/GBoH/zsxDf9IOw//RzsP/0g8D/9JPA//Sj4P/0Y3
        Bf8fGQH/cXFxEwAAAAAAAAAAAAAAAAAAAAAMDAxeOzAB/05CEv9PRBf/TkQW/09DGP8/NBP/Gh8K/wMq
        Af8CPAD/AEMA/wBAAP8APgD/AD0A/wA9AP8APwD/AEIA/wBHAP8CPQD/BSED/yckDf9HPRb/UUMY/1FD
        GP9SRBj/SjsJ/yIbAv+ZmZkjAAAAAAAAAAAAAAAAAAAAABUVFVs6MQH/VEcZ/1hOI/9NRCD/KCsT/wIy
        Af8BUQD/AEwA/wBFAP8AQQD/AEEA/wBAAP8AQAD/AEAA/wBAAP8AQQD/AEMA/wBGAP8ATQD/AEwA/wcn
        Bf86Nhj/XlMl/2VYJ/9NPQz/LCUC/35+fiEAAAAAAAAAAAAAAAAAAAAAUlJRQDkuAf9RRRn/OTYe/wkq
        Bf8BUQH/AFUA/wBQAP8ATAD/AEgA/wBJAP8ASQD/AEkA/wRFA/8ARwD/AEgA/wBJAP8ASQD/AEkA/wBN
        AP8AUQD/AFYA/wJFAf8aKg7/UUkp/0k8C/8nIgP+X19fDAAAAAAAAAAAAAAAAAAAAAC0tbQHKicg0xUg
        Bf8CRQH/BF0C/wNdAf8EWQH/A1UC/wJUAv8EUwL/BVQB/wdGBP8EHRj/Agdh/wQWHv8HPwX/BVMC/wRU
        Af8DVAH/A1QB/wNVAf8EWQH/BVsB/wNaAf8CNAL/HR4F/0pIRpcAAAAAAAAAAAAAAAAAAAAAAAAAAKOg
        oRkLLwz0Bl4D/xJpDP8TZgz/EmIM/xJiDP8RYAz/EWAL/xBaC/8HJBX/Aghw/wAKy/8ACtL/AQnR/wEH
        gf8IHR//EU8M/xBgDP8RYAz/EmAM/xFiDP8SYw3/E2UN/xBlDf8CUQH/KTYo0QAAAAAAAAAAAAAAAAAA
        AAAAAAAANzY1TQJJAv8ZbRP/IHEY/yBvGf8gbxr/IG8a/yFvGf8dWhn/BxY+/wEKxf8ACcf/AAez/wAG
        rP8ACLD/AAnD/wEJzf8DCHX/Disa/x5kG/8gbRr/H20a/yFtGv8ibhz/InEd/wpmCP8CLgH/ZWVlFQAA
        AAAAAAAAAAAAAAAAAAAKCgpeBE0C/yV4H/8wfSj/MHwq/zF7Kv8rbCj/FTIn/wIId/8ACc7/AAi9/wAG
        sf8ABaz/AAap/wAGqf8AB67/AAe9/wAJzv8ACsf/BhBb/xxHIf8vdif/Mnsq/zB8Kv8wfiv/EWsR/wIz
        Av+YmJgkAAAAAAAAAAAAAAAAAAAAABgYGFoESwL/MIEs/0KOPf8+hTr/I0An/wMJbv8BCtb/AArV/wAI
        wP8ABrb/AAa1/wAGs/8ABrL/AAaw/wAHsf8ACLT/AAe6/wAIx/8ACdn/AQq9/woUSP8vXC7/Qoo8/0CM
        PP8WcBb/AjIC/4CAgCEAAAAAAAAAAAAAAAAAAAAAUU9OPQJDAf8tgCr/OmY4/wsVSv8BC8b/AA/h/wAO
        0/8ADMv/AAzB/wAMv/8ADL//AAy+/wAMvv8ADL//AAy//wAMv/8ADMD/AAzC/wANy/8ADtX/AQ/i/wEJ
        n/8ZKjT/RoFE/xNtEf8FKQb8eHl5CgAAAAAAAAAAAAAAAAAAAADGysUGMzs1xQYdHv8CCZ//AxXq/wUa
        3v8DGdb/AxjP/wIWzf8CFsr/AhbK/wIWyv8CFsr/AhbK/wIWyv8CFsr/AhbK/wIWyv8CFsr/AhbM/wMY
        zf8EGdb/BRjj/wIR5P8DCm//BCEI/2JkZIIAAAAAAAAAAAAAAAAAAAAAAAAAAKytrhAQE17lBBLj/w4i
        7f8PJuL/ECXa/w8k1/8OI9X/DiPU/w4j1P8OI9T/DiPU/w4j1P8OI9T/DiPU/w4j1P8OI9T/DiPU/w4j
        1P8PJNX/DyTW/w8k1/8QJNn/DiXk/wwe7/8BDMH/OjtXtgAAAAAAAAAAAAAAAAAAAAAAAAAAQTxASAIM
        vf8TKfL/HjPq/x8x5P8fMuP/HzHi/x8y4v8fMuL/HzLi/x8y4v8fMuL/HzLi/x8y4v8fMuL/HzLi/x8y
        4v8fMuL/HzLi/x8y4v8eMeH/HjHh/x4x4v8eMeX/HzPr/wgZ+P8CCHX/a2trEQAAAAAAAAAAAAAAAAAA
        AAAMCwtdAQvM/yc39/8zRPL/MkTw/zNE8f8yRPD/MkTw/zJE8P8yRPD/MkTw/zJE8P8yRPD/MkTw/zJE
        8P8yRPD/MkTw/zJE8P8yRPD/MkTw/zJE8P8yRPD/MkTw/zJE8f8yRPP/EST6/wIJhf+ZmZkjAAAAAAAA
        AAAAAAAAAAAAAC8vMFQCDMT/MkP+/0hZ/f9IWfz/SVr8/0la/P9IWfv/SFn7/0lZ/P9IWfv/SFn7/0hZ
        +/9IWfv/SFn7/0hZ+/9IWfv/SFn7/0hZ+/9IWfv/SFn7/0lZ/P9JWfz/SVr8/0pa/f8XJ/7/Agh8/05O
        ThwAAAAAAAAAAAAAAAAAAAAAZ2lrKQQLg/4fLv//U2b//1Zp//9Zaf//WWn//1ho//9YaP//WGn//1ho
        //9YaP//WGj//1ho//9YaP//WGj//1ho//9YaP//WGj//1ho//9YaP//WGn//1hp//9Yaf//S1///wsZ
        8/8UFU7tiYmJAgAAAAAAAAAAAAAAAAAAAAAAAAAAVVRWZQ0RWvQVJOT/T2P+/2Z4//9pd///aXf//2l3
        //9od///aHj//2h4//9od///aHf//2h4//9oeP//aHf//2h3//9oeP//aHf//2h3//9oeP//ZXf//z9O
        //8MFr3/HyA/1pOTkjMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHFwITc4RrUID5D/MkH6/299
        //94gv//d4L+/3iC//93g/7/d4P9/3eD//93g///doP+/3eD//93g///d4P//3aD/v93g///d4P+/19u
        /v8dK+P/Cg9i92FeYn97fHkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKSjAV9h
        YFIjJFPTDxm1/05c+v9/jvz/hZP9/4WS/v+Ekv7/hZL+/4WS/v+Ekv7/hJL+/4WS/v+Fkv7/hJL+/3eD
        //84RfD/CBCN/Tc4Rqtsa2skAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAICAfwJQUFBgExdL6BUgx/9wfv7/l6H9/5eh/f+Xof3/l6H9/5eh/f+Xof3/lqH+/5Gc
        /v9OW/z/CxOd/x8iN8NjZGMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcW10OU1VUiA0UhvpaZ/z/n6n//6Su//+nrf//pa7//6Kt
        /v9ndP7/GCTJ/xIVTelramxbbnJyAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAT09ORRQXVOwYJcf/bHf//6ex
        //95hf3/Iy/Z/w4SY/ZDQ0aIT1BQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaWlpEDM1
        M4gMEVr0CRW0/wgPavtBQUiclpaWHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHt6fBYuMTJlaGlqIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//4f///4D///8AP//8AA//8AAD/8AAAf8AAAA+AAAAPgAAAB4AAAAeAA
        AAHgAAAB4AAAA+AAAAPgAAAB4AAAAeAAAAHgAAAB4AAAA+AAAAPgAAAB4AAAAeAAAAHgAAAB8AAAA/gA
        AAf8AAAf/wAAf//AAP//8AP///gP///+P/8=
</value>
  </data>
  <metadata name="mensaje_tt.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>